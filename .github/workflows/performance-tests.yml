name: Performance Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]


jobs:
  performance-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Get full git history for performance comparison

      - name: Setup Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install Ghostscript
        run: |
          sudo apt-get update
          sudo apt-get install -y ghostscript
          gs --version

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Download previous performance history
        uses: actions/download-artifact@v4
        with:
          name: performance-history
          path: test/performance/
        continue-on-error: true # Don't fail if no previous history exists

      - name: Run performance tests
        run: npm run test:perf
        env:
          NODE_ENV: test

      - name: Generate performance report
        run: |
          echo "## Performance Test Results - Node.js LTS" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -f test/performance/performance-history.json ]; then
            echo "### Summary" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            cat test/performance/performance-history.json | jq '.summary' >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY

            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Recent Results (Last 5)" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            cat test/performance/performance-history.json | jq '.results[-5:]' >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "No performance history file found" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload performance history
        uses: actions/upload-artifact@v4
        with:
          name: performance-history
          path: test/performance/performance-history.json
          retention-days: 90
        if: always()

      - name: Check for performance regression
        run: npm run perf:check-regression

      - name: Update README with performance table
        run: npm run update-readme

      - name: Commit and push README changes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          if git diff --quiet README.md; then
            echo "No changes to README.md"
          else
            git add README.md
            git commit -m "Update performance results in README [skip ci]"
            git push
          fi

